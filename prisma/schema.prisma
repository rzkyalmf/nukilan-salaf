generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id String @id @default(cuid())

  name String
  email String
  phoneNumber String?
  password String?
  avatarUrl String?
  isVerified Boolean @default(false)
  onBanned Boolean @default(false)

  role Role @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  verificationCode VerificationCode?
  schedules Schedule[]
  transactions Transaction[]
}

model VerificationCode {
  id String @id @default(cuid())
  code String
  userId String @unique
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  lastSentAt DateTime @default(now())
}

model Consultant {
  id String @id @default(uuid())

  name String
  expertise String
  description String
  image String

  schedules Schedule[]
}

model Schedule {
  id String @id @default(uuid())

  dateTime DateTime
  expiryDateTime DateTime
  timeZone String
  isAvailable Boolean @default(true)
  price Int

  consultantId String
  consultant Consultant @relation(fields: [consultantId], references: [id])
  userId String?
  user User? @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

enum PaymentStatus {
  PAID
  UNPAID
}

model Transaction {
  id String @id @default(cuid())
  amount Int
  paymentStatus PaymentStatus @default(UNPAID)

  userId String
  user User @relation(fields: [userId], references: [id])
  scheduleId String
  schedule Schedule @relation(fields: [scheduleId], references: [id])

  paymentLink String?
  transactionId String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}